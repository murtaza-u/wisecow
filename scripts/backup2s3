#!/usr/bin/env bash

# Use cronjob to run periodically.
#
# Eg: backup every hour
# */60 * * * * /path/to/backup2s3

LOG_FILE="${LOG_FILE:-/var/log/backup.log}"

# isosec id to provide context to logs
id="$(date -u +%Y%m%d%H%M%S)"

log() {
    local status="$1"; shift
    local msg="$*"
    echo "time=$(date) id=$id type=$status msg=$msg" | tee -a "$LOG_FILE"
}

compress() {
    local source="$1"
    tar -czf "/tmp/$id.tar.gz" --absolute-names "$source"
    if [[ $? -ne 0 ]]; then
        log "error" "failed to compress directory"
        exit 1
    fi
}

upload() {
    local bucket="$1"
    # send output to /dev/null, but not errors
    aws s3 cp --no-progress "/tmp/$id.tar.gz" "$bucket/" >/dev/null
    if [[ $? -ne 0 ]]; then
        log "error" "failed to upload backup to s3"
        exit 1
    fi
}

clean() {
    rm -f "/tmp/$id.tar.gz"
}

# check if necessary binaries are in PATH
prerequisites=(
    date
    tee
    tar
    aws
)

proceed=true
for bin in "${prerequisites[@]}"; do
    if [[ -z "$(command -v "$bin")" ]]; then
        echo "$bin not found on the system"
        proceed=false
    fi
done
if [[ "$proceed" != true ]]; then
    exit 1
fi

source="$SRC_DIR"
bucket="$S3_BUCKET"

if [[ -z "$source" ]]; then
    echo "SRC_DIR environment variable not set. Eg: SRC_DIR=/var/lib/mydata.db"
    exit 1
fi

if [[ -z "$bucket" ]]; then
    echo "S3_BUCKET environment variable not set. Eg: S3_BUCKET=s3://your-s3-bucket-name/backups"
    exit 1
fi

compress "$source"
upload "$bucket"
clean
log "success" "uploaded backup of $source to s3 bucket $bucket"
